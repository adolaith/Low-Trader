package com.ado.syphon.systems;

import com.ado.syphon.map.FarmZone;
import com.ado.syphon.map.Tile;
import com.ado.syphon.map.TileLayer;
import com.ado.syphon.map.Zone;
import com.ado.syphon.map.Zone.ZoneType;
import com.ado.syphon.screens.GameScreen;
import com.artemis.systems.VoidEntitySystem;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.utils.Array;
import com.badlogic.gdx.utils.ArrayMap;

public class FarmSystem extends VoidEntitySystem{
	ArrayMap<String, ArrayMap<String, Integer>> farmProfiles;
	GameScreen game;
	
	public FarmSystem(GameScreen game){
		super();
		this.game = game;
	}

	@Override
	protected void processSystem() {
		Array<Zone> zList = game.getMap().getLayer(0).zoneLayer.getZoneList(ZoneType.FARM);
		for(Zone z: zList){
			FarmZone f = (FarmZone)z;
			ArrayMap<String, Integer> profile = farmProfiles.get(f.itemName);
			
			if(f.itemName == null) continue;
			f.daysGrowing++;
			if(f.maintenance > 0.6f){
				f.growScore++;
				f.maintenance = 0;
			}else{
				f.maintenance = 0;
			}
			
			TileLayer tLayer = game.getMap().getLayer(0).tileLayer;
			if(f.daysGrowing>=profile.get("growTime")/2 &&
					f.daysGrowing != profile.get("growTime")){
				for(Vector2 vec: f.getTileList()){
					Tile t = tLayer.map[(int)vec.x][(int)vec.y];
					t.id = profile.get("stage1");
				}
			}else if(f.daysGrowing == profile.get("growTime")){
				for(Vector2 vec: f.getTileList()){
					Tile t = tLayer.map[(int)vec.x][(int)vec.y];
					t.id = profile.get("stage2");
				}
			}else if(f.daysGrowing == profile.get("growTime") + 2){
				for(Vector2 vec: f.getTileList()){
					Tile t = tLayer.map[(int)vec.x][(int)vec.y];
					t.id = 2;
				}
				f.itemName = null;
			}
			
		}
	}
	public void loadProfiles(ArrayMap<String, ArrayMap<String, Integer>> farmProfiles){
		this.farmProfiles = farmProfiles;
	}
}
